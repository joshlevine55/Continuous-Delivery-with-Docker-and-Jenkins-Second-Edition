pipeline {
    agent any
    environment {
        REGISTRY = "https://localhost:5001" 
        REGISTRY_HOST = "localhost:5001" 
        PROJECT_DIR = "Chapter08/sample1"
        IMAGE_NAME = "calculator"
        IMAGE_TAG = ""
    }

    stages {
    
        stage('Build') {
            steps {
                sh """
                  cd Chapter08/sample1
                  chmod +x gradlew
                  ./gradlew build
                """
            }
        }

        stage('Run in Main Branch') {
            when {
                branch "main"
            }
            steps {
                sh """
                   cd Chapter08/sample1
                   ./gradlew jacocoTestCoverageVerification
                """
                }
            }

        stage('Run in Playground') {
            when {
                branch "playground"
            }
            steps {
                sh """
                   cd Chapter08/sample1
                   ./gradlew test
                   ./gradlew jacocoTestReport
                """   
            }
        }

        stage('Run in Feature Branches') {
            when {
                expression { 
                env.BRANCH_NAME.contains("feature") 
            } 

            }
            steps {
                sh """
                   cd Chapter08/sample1
                   ./gradlew test
                   ./gradlew jacocoTestReport
                """
                
                }
            }

        stage('Build Container') {
            when {
                anyOf {
                    branch 'main'
                    branch 'feature'
                }
            }
            steps {
                script {
                    if (env.BRANCH_NAME == 'main') {
                        IMAGE_NAME = "calculator"
                        IMAGE_TAG = "1.0"
                    } else if (env.BRANCH_NAME == 'feature') {
                        IMAGE_NAME = "calculator-feature"
                        IMAGE_TAG = "0.1"
                    }
                    withCredentials([usernamePassword(credentialsId: 'docker-registry', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                        sh """
                           set -e
                           cd ${PROJECT_DIR}
                           pwd
                           // echo "\$DOCKER_PASS" | docker login \$REGISTRY -u \$DOCKER_USER --password-stdin
                           docker login https://localhost:5001 -u testuser -p testpassword
                           docker build -t ${IMAGE_NAME} .
                           docker tag ${IMAGE_NAME} ${REGISTRY_HOST}/${IMAGE_NAME}:${IMAGE_TAG}
                           docker push ${REGISTRY_HOST}/${IMAGE_NAME}:${IMAGE_TAG}
                        """
                    }
                }
            }
        }
      }
     
    post {
        failure {
            echo 'Build Failed!'
        }
        success {
            echo 'Pipeline ran perfectly!'
        }
    }
}
